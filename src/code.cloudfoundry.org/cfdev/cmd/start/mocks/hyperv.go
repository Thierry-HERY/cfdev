// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: HyperV)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHyperV is a mock of HyperV interface
type MockHyperV struct {
	ctrl     *gomock.Controller
	recorder *MockHyperVMockRecorder
}

// MockHyperVMockRecorder is the mock recorder for MockHyperV
type MockHyperVMockRecorder struct {
	mock *MockHyperV
}

// NewMockHyperV creates a new mock instance
func NewMockHyperV(ctrl *gomock.Controller) *MockHyperV {
	mock := &MockHyperV{ctrl: ctrl}
	mock.recorder = &MockHyperVMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHyperV) EXPECT() *MockHyperVMockRecorder {
	return m.recorder
}

// CreateVM mocks base method
func (m *MockHyperV) CreateVM(arg0 string) error {
	ret := m.ctrl.Call(m, "CreateVM", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateVM indicates an expected call of CreateVM
func (mr *MockHyperVMockRecorder) CreateVM(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVM", reflect.TypeOf((*MockHyperV)(nil).CreateVM), arg0)
}

// Start mocks base method
func (m *MockHyperV) Start(arg0 string) error {
	ret := m.ctrl.Call(m, "Start", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockHyperVMockRecorder) Start(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockHyperV)(nil).Start), arg0)
}
