// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: GardenClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	garden "code.cloudfoundry.org/cfdev/garden"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGardenClient is a mock of GardenClient interface
type MockGardenClient struct {
	ctrl     *gomock.Controller
	recorder *MockGardenClientMockRecorder
}

// MockGardenClientMockRecorder is the mock recorder for MockGardenClient
type MockGardenClientMockRecorder struct {
	mock *MockGardenClient
}

// NewMockGardenClient creates a new mock instance
func NewMockGardenClient(ctrl *gomock.Controller) *MockGardenClient {
	mock := &MockGardenClient{ctrl: ctrl}
	mock.recorder = &MockGardenClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGardenClient) EXPECT() *MockGardenClientMockRecorder {
	return m.recorder
}

// DeployBosh mocks base method
func (m *MockGardenClient) DeployBosh() error {
	ret := m.ctrl.Call(m, "DeployBosh")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployBosh indicates an expected call of DeployBosh
func (mr *MockGardenClientMockRecorder) DeployBosh() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployBosh", reflect.TypeOf((*MockGardenClient)(nil).DeployBosh))
}

// DeployCloudFoundry mocks base method
func (m *MockGardenClient) DeployCloudFoundry(arg0 []string) error {
	ret := m.ctrl.Call(m, "DeployCloudFoundry", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployCloudFoundry indicates an expected call of DeployCloudFoundry
func (mr *MockGardenClientMockRecorder) DeployCloudFoundry(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployCloudFoundry", reflect.TypeOf((*MockGardenClient)(nil).DeployCloudFoundry), arg0)
}

// DeployService mocks base method
func (m *MockGardenClient) DeployService(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "DeployService", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployService indicates an expected call of DeployService
func (mr *MockGardenClientMockRecorder) DeployService(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployService", reflect.TypeOf((*MockGardenClient)(nil).DeployService), arg0, arg1)
}

// GetServices mocks base method
func (m *MockGardenClient) GetServices() ([]garden.Service, error) {
	ret := m.ctrl.Call(m, "GetServices")
	ret0, _ := ret[0].([]garden.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServices indicates an expected call of GetServices
func (mr *MockGardenClientMockRecorder) GetServices() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServices", reflect.TypeOf((*MockGardenClient)(nil).GetServices))
}

// Ping mocks base method
func (m *MockGardenClient) Ping() error {
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping
func (mr *MockGardenClientMockRecorder) Ping() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockGardenClient)(nil).Ping))
}

// ReportProgress mocks base method
func (m *MockGardenClient) ReportProgress(arg0 garden.UI, arg1 string) {
	m.ctrl.Call(m, "ReportProgress", arg0, arg1)
}

// ReportProgress indicates an expected call of ReportProgress
func (mr *MockGardenClientMockRecorder) ReportProgress(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportProgress", reflect.TypeOf((*MockGardenClient)(nil).ReportProgress), arg0, arg1)
}
