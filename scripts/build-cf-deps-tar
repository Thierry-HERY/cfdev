#!/usr/bin/env bash

set -ex

while getopts "m:c:r:" arg; do
  case $arg in
    m) manifest="$OPTARG"
      ;;
    r) runtime="$OPTARG"
      ;;
    c) cloud_config="$OPTARG"
  esac
done

if [[ -z $manifest || -z $cloud_config || -z $runtime ]]; then
  echo "USAGE: build-cf-deps-tar -m <path-to-cf-manifest> -c <path-to-cloud-config> -r <path-to-runtime-config>"
  exit 2
fi
if [[ ! -f $manifest || ! -f $cloud_config  || ! -f $runtime ]]; then
  echo "ERROR: Either $manifest of $cloud_config do not exist"
  exit 2
fi
manifest="$(cd "$(dirname "$manifest")"; pwd)/$(basename "$manifest")"
cloud_config="$(cd "$(dirname "$cloud_config")"; pwd)/$(basename "$cloud_config")"
runtime_config="$(cd "$(dirname "$runtime")"; pwd)/$(basename "$runtime")"

if [[ -z "$BOSH_ENVIRONMENT" ]]; then
  echo "ERROR: a bosh director is required to compile releases, please set your BOSH_* env variables"
  exit 3
fi

dir="$(cd "$( dirname $0)" && pwd)"
output_dir="$dir"/../output
tmpdir="$(mktemp -d)"
mkdir -p "$output_dir"
mkdir -p "$tmpdir"/releases
trap cleanup EXIT

source "$dir"/build-deps-tar-helpers

tar_deps () {
  cp "$manifest" "$tmpdir"/deployment.yml
  cp "$cloud_config" "$tmpdir"/cloud-config.yml
  cp "$runtime" "$tmpdir"/runtime-config.yml
  pushd "$tmpdir"
    tar cvzf "$output_dir"/cf.tgz *
  popd
}

main () {
  download_warden_stemcell
  download_compiled_releases
  compile_releases "$manifest"
  compile_releases "$runtime"
  tar_deps
}

main
