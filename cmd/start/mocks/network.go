// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: HostNet)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHostNet is a mock of HostNet interface
type MockHostNet struct {
	ctrl     *gomock.Controller
	recorder *MockHostNetMockRecorder
}

// MockHostNetMockRecorder is the mock recorder for MockHostNet
type MockHostNetMockRecorder struct {
	mock *MockHostNet
}

// NewMockHostNet creates a new mock instance
func NewMockHostNet(ctrl *gomock.Controller) *MockHostNet {
	mock := &MockHostNet{ctrl: ctrl}
	mock.recorder = &MockHostNetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHostNet) EXPECT() *MockHostNetMockRecorder {
	return m.recorder
}

// AddLoopbackAliases mocks base method
func (m *MockHostNet) AddLoopbackAliases(arg0 ...string) error {
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddLoopbackAliases", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddLoopbackAliases indicates an expected call of AddLoopbackAliases
func (mr *MockHostNetMockRecorder) AddLoopbackAliases(arg0 ...interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLoopbackAliases", reflect.TypeOf((*MockHostNet)(nil).AddLoopbackAliases), arg0...)
}
