// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: Toggle)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockToggle is a mock of Toggle interface
type MockToggle struct {
	ctrl     *gomock.Controller
	recorder *MockToggleMockRecorder
}

// MockToggleMockRecorder is the mock recorder for MockToggle
type MockToggleMockRecorder struct {
	mock *MockToggle
}

// NewMockToggle creates a new mock instance
func NewMockToggle(ctrl *gomock.Controller) *MockToggle {
	mock := &MockToggle{ctrl: ctrl}
	mock.recorder = &MockToggleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockToggle) EXPECT() *MockToggleMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockToggle) Get() bool {
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockToggleMockRecorder) Get() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockToggle)(nil).Get))
}

// SetProp mocks base method
func (m *MockToggle) SetProp(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "SetProp", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetProp indicates an expected call of SetProp
func (mr *MockToggleMockRecorder) SetProp(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetProp", reflect.TypeOf((*MockToggle)(nil).SetProp), arg0, arg1)
}
